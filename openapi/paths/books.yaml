paths:
  /books:
    get:
      operationId: listBooks
      summary: List books
      description: Get a paginated list of books.
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: Maximum number of books to return
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
          description: Offset for pagination
      responses:
        "200":
          description: A list of books
          content:
            application/json:
              schema:
                $ref: "../schemas/BooksListResponse.yaml#/BooksListResponse"
        "401":
          $ref: "../components/responses/CommonErrors.yaml#/UnauthorizedError"

    post:
      operationId: createBook
      summary: Create a new book
      description: Add a new book to the library.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "..//schemas/NewBook.yaml#/NewBook"
      responses:
        "201":
          description: Book created
          content:
            application/json:
              schema:
                $ref: "../schemas/Book.yaml#/Book"
        "400":
          $ref: "../components/responses/CommonErrors.yaml#/BadRequestError"
        "401":
          $ref: "../components/responses/CommonErrors.yaml#/UnauthorizedError"

  /books/{bookId}:
    parameters:
      - name: bookId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the book

    get:
      operationId: getBook
      summary: Get book by ID
      responses:
        "200":
          description: The book
          content:
            application/json:
              schema:
                $ref: "../schemas/Book.yaml#/Book"
        "404":
          $ref: "../components/responses/CommonErrors.yaml#/NotFoundError"
        "401":
          $ref: "../components/responses/CommonErrors.yaml#/UnauthorizedError"

    put:
      operationId: updateBook
      summary: Update a book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "..//schemas/UpdateBook.yaml#/UpdateBook"
      responses:
        "200":
          description: Updated book
          content:
            application/json:
              schema:
                $ref: "../schemas/Book.yaml#/Book"
        "400":
          $ref: "../components/responses/CommonErrors.yaml#/BadRequestError"
        "404":
          $ref: "../components/responses/CommonErrors.yaml#/NotFoundError"
        "401":
          $ref: "../components/responses/CommonErrors.yaml#/UnauthorizedError"

    delete:
      operationId: deleteBook
      summary: Delete a book
      responses:
        "204":
          description: No content â€” book deleted
        "404":
          $ref: "../components/responses/CommonErrors.yaml#/NotFoundError"
        "401":
          $ref: "../components/responses/CommonErrors.yaml#/UnauthorizedError"
